#if 1
regval_list vgayuv_regs[] = {
{REG_CLKRC, 0x87}, // fintclk = extclk * pll mult / 2*(clkrc[5:0]+1)
//{REG_COM11, 0x0A}, // night mode, banding settings - default 0x00
{REG_TSLB, 0x04}, // yuyv order, and reserved values set in [2:1]
{REG_COM7, 0x00 },	// VGA 


// this looks best of the lot
	{ REG_HSTART, 0x13 },	
	{ REG_HSTOP, 0x01 },
	{ REG_HREF, 0xb6 },	
	{ REG_VSTART, 0x02 },
	{ REG_VSTOP, 0x7a },	
	{ REG_VREF, 0x0a },
	
{REG_COM3, 0x00},
{REG_MVFP, 0x3f},
// 640x480 
{REG_COM14, 0x00},
{0x70, 0x3a}, 
{0x71, 0x35},
{0x72, 0x11},
{0x73, 0xf0}, 
{0xa2, 0x02},
{REG_COM10, 0x02}, // 02 = negative vsync required, AL422 WRST tied to VSYNC, start of frame low vsync resets fifo write pointer
// pclk must be left on all times to feed wck clock of AL422 to refresh the fifo dram

{0x03, 0x00},

// COLOR SETTING
{0x4f, 0x80},
{0x50, 0x80},
{0x51, 0x00},
{0x52, 0x22},
{0x53, 0x5e},
{0x54, 0x80},
{0x56, 0x40},
{0x58, 0x9e},
{0x59, 0x88},
{0x5a, 0x88},
{0x5b, 0x44},
{0x5c, 0x67},
{0x5d, 0x49},
{0x5e, 0x0e},
{0x69, 0x00},
{0x6a, 0x40},
{0x6b, 0x00},// 0x0a DBLV[7:6] = 0 => ext clock pll multiplier is 0
{0x6c, 0x0a},
{0x6d, 0x55},
{0x6e, 0x11},
{0x6f, 0x9f},
{0xb0, 0x84},
{0xff, 0xff}
};
#endif

#if 0
regval_list vga_regs[] = {
	{0x00, 0x00}, // agc gain control
	{0x01, 0x80},	// awb blue gain
	{0x02, 0x80},	 // awb blue gain
	{0x03, 0x00},	// vertical frame control
	{0x04, 0x00},	// com1
	{0x05, 0x00}, // bave	
	{0x06, 0x00},	// gbave
	{0x07, 0x00},	// aechh
	{0x08, 0x00},	// rave
	{0x09, 0x02},  // com2 drive	
	{0x0c, 0x00},	// com3
	{0x0d, 0x00},	// com4 full window
	{0x0e, 0x01},	// com5
	{0x0f, 0x43},	// com6
	{0x10, 0x40}, // aech	
	{0x11, 0x80},	// clkrc prescaler note 0x87 in video
	{0x12, 0x04},	// com7
	{0x13, 0xa7},	// com8
	{0x14, 0x82},	// agc ceiling
	{0x15, 0x00},	// com10 pclk does not toggle
	{0x17, 0x11},	 // hstart
	{0x18, 0x61},	// hstop
	{0x19, 0x03},	// vstart
	{0x1a, 0x73},  // vstop	
	{0x1b, 0x00},	// data format pixel delay
	{0x1e, 0x3f},	// mvfp - note 0x01 in video vertically flip
	{0x20, 0x04},	 // adcctr0
	{0x21, 0x02},	 // adcctr1
	{0x22, 0x01},	// adcctr2
	{0x24, 0x75}, // aew	
	{0x25, 0x63},	// aeb
	{0x26, 0xd4},	//vpt
	{0x27, 0x80},	// bbias
	{0x2b, 0x00},	//exhcl
	{0x30, 0x08},	// hsyst
	{0x31, 0x30},	// hsyen
	{0x32, 0x80},	// href edge offset, href start, end lsbs
	{0x33, 0x08},	// chlf
	{0x34, 0x11},	// arblm
	{0x37, 0x3F},  // adc	
	{0x38, 0x01},	 // acom
	{0x39, 0x00},	// ofon
	{0x3a, 0x0d},	// tslb
	{0x3b, 0x00},	// com11 night mode
	{0x3c, 0x68},	// com12 no href when vsync is low
	{0x3d, 0x00},	// com13 enable gamma
	{0x3e, 0x00},	// com14  pclk manual scaling important
	{0x40, 0xd0},	// com15 output range
	{0x41, 0x38},	// com16 edge enhancement
	{0x42, 0x00},	// dsp color bar
	{0x43, 0x14},	// awbc1
	{0x44, 0xf0},	// awbc2
	{0x45, 0x45},	// awbc3
	{0x46, 0x61},  // awbc4	
	{0x45, 0x51},	// awbc5
	{0x48, 0x79},	// awbc6
	{0x4c, 0x20},	// dnsth
	{0x4f, 0x05},	// mtx1
	{0x50, 0x34},	//mtx2
	{0x51, 0x15},	//mtx3
	{0x52, 0x17},	//mtx4
	{0x53, 0x24},	//mtx5
	{0x54, 0x60},	//mtx6
	{0x56, 0x40},	// contrast
	{0x57, 0x80},	// contrast center
	{0x58, 0x1e},	//mtxs auto contrast
	{0x63, 0x00}, // lcc2 lens correction	
	{0x64, 0x07},	// lcc3
	{0x65, 0x30},	// lcc4
	{0x66, 0x05},	// lcc5
	{0x67, 0x04},	// manu 
	{0x68, 0x80},	// manv
	{0x69, 0x00},	// gfix
	{0x6a, 0x00},	 //ggain
	{0x6b, 0x00},	// dblv pll control note important
	{0x6c, 0x02},	// awbctr3
	{0x6d, 0x55},	// awbctr2
	{0x6e, 0xc0},	// awbctr1
	{0x6f, 0x9a},	// awbctr0
	{0x70, 0x3a},	// scaling, testpattern
	{0x71, 0x35},	// scaling ysc
	{0x72, 0x11},	// scaling vertical downsampling
	{0x73, 0x00},	// scaling
	{0x74, 0x00},	// gain control
	{0x75, 0x0f},	// edge enhancement	
	{0x76, 0x41},	// black pixel correction enable, white pixel
	{0x77, 0x10},	// denoise
	{0x7a, 0x24},	 // gamma slope
	{0x7b, 0x04},	// gam1	
	{0x7c, 0x07},	// gam2
	{0x7d, 0x10},	//gam3	
	{0x7e, 0x28},	//gam4`	
	{0x7f, 0x36},	//gam5
	{0x80, 0x44},	//gam6
	{0x81, 0x52}, // gam7	
	{0x82, 0x60},	// gam8
	{0x83, 0x6c},	//gam9
	{0x84, 0x78},	//gam10
	{0x85, 0x8c},	//gam11
	{0x86, 0x9e}, // gam12	
	{0x87, 0xbb},	// gam13
	{0x88, 0xd2},// gam14	
	{0x89, 0xe5},	// gam15
	{0x8c, 0x00},// rgb444	
	{0x94, 0x40},	// lcc6
	{0x95, 0x50},	// lcc7
	{0x9d, 0x99},	// bd50st banding filter
	{0x9e, 0x7f},	// bd60st
	{0x9f, 0xc0},	// haecc1
	{0xa0, 0x90},	// haecc2
	{0xa2, 0x02},	// scaling pixel delay
	{0xa5, 0x0f},	// bd50max banding
	{0xa6, 0xf0},	// haecc3
	{0xa7, 0xc1},	// haecc4
	{0xa8, 0xf0},// haecc5	
	{0xa9, 0xc1},	// haecc6
	{0xaa, 0x14},// haecc7	
	{0xab, 0x00},	//bd60max
	{0xad, 0x80},// str r	
	{0xae, 0x80},	// str g
	{0xaf, 0xe0},	// str b
	{0xb1, 0x00},	// ablc1
	{0xb3, 0x00},	// thl_st
	{0xb5, 0x04},	// thl_dlt
	{0xc0, 0x00}, // ad chgb	
	{0xc1, 0x00},	// ad chgr
	{0xc9, 0xc0},	//satctr  note delay 1s after this
	{0xff, 0xff}
};

regval_list colorsettings_regs[] = {
// COLOR SETTING
{0x4f, 0x80},
{0x50, 0x80},
{0x51, 0x00},
{0x52, 0x22},
{0x53, 0x5e},
{0x54, 0x80},
{0x56, 0x40},
{0x58, 0x9e},
{0x59, 0x88},
{0x5a, 0x88},
{0x5b, 0x44},
{0x5c, 0x67},
{0x5d, 0x49},
{0x5e, 0x0e},
{0x69, 0x00},
{0x6a, 0x40},
{0x6b, 0x0a},
{0x6c, 0x0a},
{0x6d, 0x55},
{0x6e, 0x11},
{0x6f, 0x9f},
{0xb0, 0x84},
{0xff, 0xff}};
#endif

#if 0
regval_list ov7670_default_regs[] = {
/*
 * Clock scale: 3 = 15fps
 *              2 = 20fps
 *              1 = 30fps
 */
	{ REG_CLKRC, 0x1 },	/* OV: clock scale (30 fps) */
	{ REG_TSLB,  0x04 },	/* OV */
	{ REG_COM7, 0 },	/* VGA */
	/*
	 * Set the hardware window.  These values from OV don't entirely
	 * make sense - hstop is less than hstart.  But they work...
	 */
	{ REG_HSTART, 0x13 },	{ REG_HSTOP, 0x01 },
	{ REG_HREF, 0xb6 },	{ REG_VSTART, 0x02 },
	{ REG_VSTOP, 0x7a },	{ REG_VREF, 0x0a },
	{ REG_COM3, 0 },	
	{ REG_COM14, 0 },
	/* Mystery scaling numbers */
	{ 0x70, 0x3a },		{ 0x71, 0x35 },
	{ 0x72, 0x11 },		{ 0x73, 0xf0 },
	{ 0xa2, 0x02 },		{ REG_COM10, 0x0 },
	/* Gamma curve values */
	{ 0x7a, 0x20 },		{ 0x7b, 0x10 },
	{ 0x7c, 0x1e },		{ 0x7d, 0x35 },
	{ 0x7e, 0x5a },		{ 0x7f, 0x69 },
	{ 0x80, 0x76 },		{ 0x81, 0x80 },
	{ 0x82, 0x88 },		{ 0x83, 0x8f },
	{ 0x84, 0x96 },		{ 0x85, 0xa3 },
	{ 0x86, 0xaf },		{ 0x87, 0xc4 },
	{ 0x88, 0xd7 },		{ 0x89, 0xe8 },
	/* AGC and AEC parameters.  Note we start by disabling those features,
	   then turn them only after tweaking the values. */
	{ REG_COM8, COM8_FASTAEC | COM8_AECSTEP | COM8_BFILT },
	{ REG_GAIN, 0 },	{ REG_AECH, 0 },
	{ REG_COM4, 0x40 }, /* magic reserved bit */
	{ REG_COM9, 0x18 }, /* 4x gain + magic rsvd bit */
	{ REG_BD50MAX, 0x05 },	{ REG_BD60MAX, 0x07 },
	{ REG_AEW, 0x95 },	{ REG_AEB, 0x33 },
	{ REG_VPT, 0xe3 },	{ REG_HAECC1, 0x78 },
	{ REG_HAECC2, 0x68 },	{ 0xa1, 0x03 }, /* magic */
	{ REG_HAECC3, 0xd8 },	{ REG_HAECC4, 0xd8 },
	{ REG_HAECC5, 0xf0 },	{ REG_HAECC6, 0x90 },
	{ REG_HAECC7, 0x94 },
	{ REG_COM8, COM8_FASTAEC|COM8_AECSTEP|COM8_BFILT|COM8_AGC|COM8_AEC },
	/* Almost all of these are magic "reserved" values.  */
	{ REG_COM5, 0x61 },	{ REG_COM6, 0x4b },
	{ 0x16, 0x02 },		{ REG_MVFP, 0x07 },
	{ 0x21, 0x02 },		{ 0x22, 0x91 },
	{ 0x29, 0x07 },		{ 0x33, 0x0b },
	{ 0x35, 0x0b },		{ 0x37, 0x1d },
	{ 0x38, 0x71 },		{ 0x39, 0x2a },
	{ REG_COM12, 0x78 },	{ 0x4d, 0x40 },
	{ 0x4e, 0x20 },		{ REG_GFIX, 0 },
	{ 0x6b, 0x4a },		{ 0x74, 0x10 },
	{ 0x8d, 0x4f },		{ 0x8e, 0 },
	{ 0x8f, 0 },		{ 0x90, 0 },
	{ 0x91, 0 },		{ 0x96, 0 },
	{ 0x9a, 0 },		{ 0xb0, 0x84 },
	{ 0xb1, 0x0c },		{ 0xb2, 0x0e },
	{ 0xb3, 0x82 },		{ 0xb8, 0x0a },
	/* More reserved magic, some of which tweaks white balance */
	{ 0x43, 0x0a },		{ 0x44, 0xf0 },
	{ 0x45, 0x34 },		{ 0x46, 0x58 },
	{ 0x47, 0x28 },		{ 0x48, 0x3a },
	{ 0x59, 0x88 },		{ 0x5a, 0x88 },
	{ 0x5b, 0x44 },		{ 0x5c, 0x67 },
	{ 0x5d, 0x49 },		{ 0x5e, 0x0e },
	{ 0x6c, 0x0a },		{ 0x6d, 0x55 },
	{ 0x6e, 0x11 },		{ 0x6f, 0x9f }, /* "9e for advance AWB" */
	{ 0x6a, 0x40 },		{ REG_BLUE, 0x40 },
	{ REG_RED, 0x60 },
	{ REG_COM8, COM8_FASTAEC|COM8_AECSTEP|COM8_BFILT|COM8_AGC|COM8_AEC|COM8_AWB },
	/* Matrix coefficients */
	{ 0x4f, 0x80 },		{ 0x50, 0x80 },
	{ 0x51, 0 },		{ 0x52, 0x22 },
	{ 0x53, 0x5e },		{ 0x54, 0x80 },
	{ 0x58, 0x9e },
	{ REG_COM16, COM16_AWBGAIN },	{ REG_EDGE, 0 },
	{ 0x75, 0x05 },		{ 0x76, 0xe1 },
	{ 0x4c, 0 },		{ 0x77, 0x01 },
	{ REG_COM13, 0xc3 },	{ 0x4b, 0x09 },
	{ 0xc9, 0x60 },		{ REG_COM16, 0x38 },
	{ 0x56, 0x40 },
	{ 0x34, 0x11 },		{ REG_COM11, COM11_EXP|COM11_HZAUTO },
	{ 0xa4, 0x88 },		{ 0x96, 0 },
	{ 0x97, 0x30 },		{ 0x98, 0x20 },
	{ 0x99, 0x30 },		{ 0x9a, 0x84 },
	{ 0x9b, 0x29 },		{ 0x9c, 0x03 },
	{ 0x9d, 0x4c },		{ 0x9e, 0x3f },
	{ 0x78, 0x04 },
	/* Extra-weird stuff.  Some sort of multiplexor register */
	{ 0x79, 0x01 },		{ 0xc8, 0xf0 },
	{ 0x79, 0x0f },		{ 0xc8, 0x00 },
	{ 0x79, 0x10 },		{ 0xc8, 0x7e },
	{ 0x79, 0x0a },		{ 0xc8, 0x80 },
	{ 0x79, 0x0b },		{ 0xc8, 0x01 },
	{ 0x79, 0x0c },		{ 0xc8, 0x0f },
	{ 0x79, 0x0d },		{ 0xc8, 0x20 },
	{ 0x79, 0x09 },		{ 0xc8, 0x80 },
	{ 0x79, 0x02 },		{ 0xc8, 0xc0 },
	{ 0x79, 0x03 },		{ 0xc8, 0x40 },
	{ 0x79, 0x05 },		{ 0xc8, 0x30 },
	{ 0x79, 0x26 },
	{ 0xff, 0xff },	/* END MARKER */
};

#endif

regval_list ov7670_fmt_yuv422[] = {
	{ REG_COM7, 0x0 },  /* Selects YUV mode */
	{ REG_RGB444, 0 },	/* No RGB444 please */
	{ REG_COM1, 0 },	/* CCIR601 */
	{ REG_COM15, COM15_R00FF },
	{ REG_COM9, 0x18 }, /* 4x gain ceiling; 0x8 is reserved bit */
	{ 0x4f, 0x80 }, 	/* "matrix coefficient 1" */
	{ 0x50, 0x80 }, 	/* "matrix coefficient 2" */
	{ 0x51, 0    },		/* vb */
	{ 0x52, 0x22 }, 	/* "matrix coefficient 4" */
	{ 0x53, 0x5e }, 	/* "matrix coefficient 5" */
	{ 0x54, 0x80 }, 	/* "matrix coefficient 6" */
	{ REG_COM13, COM13_GAMMA|COM13_UVSAT },
	{ 0xff, 0xff },
};